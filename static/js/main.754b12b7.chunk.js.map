{"version":3,"sources":["reducers/number.js","reducers/title.js","reducers/day.js","reducers/index.js","components/App.js","containers/App.js","actions/index.js","index.js"],"names":["number","state","arguments","length","undefined","action","type","payload","num","title","day","combineReducers","App","_ref","plus","minus","react_default","a","createElement","onClick","connect","dispatch","store","createStore","rootReducer","subscribe","console","log","getState","render","es","containers_App","document","getElementById"],"mappings":"sKAceA,EAdA,WAAuB,IAAtBC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAAGG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOC,MACb,IAAK,OACH,OAAOL,EAAQI,EAAOE,QAAQC,IAEhC,IAAK,QACH,OAAOP,EAAQI,EAAOE,QAAQC,IAGhC,QACE,OAAOP,ICHEQ,EAPD,WAAkC,IAAjCR,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB,aAGjB,OAH0CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC/BE,KAEJL,GCIES,EAPH,WAAqC,IAApCT,EAAoCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5B,gBAGf,OAH2CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChCE,KAEJL,GCEEU,cAAgB,CAC7BX,SACAS,QACAC,eCsBaE,EA3BH,SAAAC,GAAyC,IAAtCb,EAAsCa,EAAtCb,OAAQU,EAA8BG,EAA9BH,IAAKD,EAAyBI,EAAzBJ,MAAOK,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,MACvC,OACEC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,UACGT,EADH,IACWT,EADX,IACoBU,GAEpBM,EAAAC,EAAAC,cAAA,UACEC,QAAS,WAEPL,EAAK,MAHT,OAQAE,EAAAC,EAAAC,cAAA,UACEC,QAAS,WAEPJ,EAAM,MAHV,SCUSK,cAvBS,SAAAnB,GACtB,MAAO,CACLD,OAAQC,EAAMD,OACdU,IAAKT,EAAMS,IACXD,MAAOR,EAAMQ,QAMU,SAAAY,GACzB,MAAO,CACLP,KAAM,SAAAN,GACJa,ECjBc,SAAAb,GAClB,MAAO,CAAEF,KAAM,OAAQC,QAAS,CAAEC,IAAKA,IDgB1BM,CAAKN,KAEhBO,MAAO,SAAAP,GACLa,EChBe,SAAAb,GACnB,MAAO,CAAEF,KAAM,QAASC,QAAS,CAAEC,IAAKA,IDe3BO,CAAMP,OAONY,CAGbR,GElBIU,EAAQC,YAAYC,GAE1BF,EAAMG,UAAU,WACdC,QAAQC,IAAIL,EAAMM,cAKpBC,iBACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUR,MAAOA,GACfN,EAAAC,EAAAC,cAACa,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.754b12b7.chunk.js","sourcesContent":["const number = (state = 0, action) => {\n  switch (action.type) {\n    case \"PLUS\":\n      return state + action.payload.num;\n\n    case \"MINUS\":\n      return state - action.payload.num;\n\n    // 初期値を設定するためにも必要\n    default:\n      return state;\n  }\n};\n\nexport default number;\n","const title = (state = \"test title\", action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default title;\n","const day = (state = \"test day 2018\", action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default day;\n","import { combineReducers } from \"redux\";\nimport number from \"./number\";\nimport title from \"./title\";\nimport day from \"./day\";\n\nexport default combineReducers({\n  number,\n  title,\n  day\n});\n","import React from \"react\";\n\n// connectメソッドで渡されてくる引数{ number, plus, minus }\nconst App = ({ number, day, title, plus, minus }) => {\n  return (\n    <div>\n      {/* number として受け取った state を使用する */}\n      <h2>\n        {title} {number} {day}\n      </h2>\n      <button\n        onClick={() => {\n          // plus として受け取ったメソッドを使用する\n          plus(10); // this.plusではない。\n        }}\n      >\n        +10\n      </button>\n      <button\n        onClick={() => {\n          // minus として受け取ったメソッドを使用する\n          minus(10); // this.minusではない。\n        }}\n      >\n        -10\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import App from \"../components/App\";\nimport { connect } from \"react-redux\";\nimport { plus, minus } from \"../actions/\";\n\n// number という名前で state をコンポーネントに渡す\nconst mapStateToProps = state => {\n  return {\n    number: state.number,\n    day: state.day,\n    title: state.title\n  };\n};\n\n// plus と minus というメソッド名で\n// action を dispatch するメソッドをコンポーネントに渡す\nconst mapDispatchToProps = dispatch => {\n  return {\n    plus: num => {\n      dispatch(plus(num));\n    },\n    minus: num => {\n      dispatch(minus(num));\n    }\n  };\n};\n\n// connect で App コンポーネントに、\n// 「state」 と 「action を dispatchするメソッド」を渡す\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// 単にアクションを返すだけのファンクション\nexport const plus = num => {\n  return { type: \"PLUS\", payload: { num: num } };\n};\n\nexport const minus = num => {\n  return { type: \"MINUS\", payload: { num: num } };\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\n// React Component に store を渡すために、\n// Provider でラッピングする\nimport { Provider } from \"react-redux\";\n\n// 別ファイルに切り出しています\nimport App from \"./containers/App\";\n\nconst store = createStore(rootReducer);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\n// Provider でラップした上で、\n// store を渡す\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}